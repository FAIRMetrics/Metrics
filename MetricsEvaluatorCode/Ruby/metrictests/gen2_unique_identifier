#!/home/mark_moby_wilkinson/.rvm/rubies/ruby-2.5.1/bin/ruby
require './fair_metrics_utilities.rb'
require 'cgi'
require 'json'
require 'uri'

debug = false
VERSION = HARVESTER_VERSION + ":" + "Tst-0.2.2"

def testGUID

	@swagger.addComment("INFO: TEST VERSION '#{VERSION}'\n")
	
	guid = @swagger.testedGUID

    type = Utils::typeit(guid)

	if type
		@swagger.addComment("SUCCESS: Found an identifier of type '#{type}'\n")
		@swagger.score = 1
		return @swagger.createEvaluationResponse
	end

	@swagger.addComment("FAILURE: the identifier #{guid} did not match any known identification system (tested inchi, doi, handle, uri) and therefore did not pass this metric.  If you think this is an error, please contact the FAIR Metrics group (http://fairmetrics.org).\n")
	@swagger.score = 0
	return @swagger.createEvaluationResponse

	
end



if debug
	@input = '{"subject": "10.5281/zenodo.1147435"}'  # doi
#	@input = '{"subject": "BSYNRYMUTXBXSQ-UHFFFAOYSA-N"}' # inchi
#	@input = '{"subject": "LFQSCWFLJHTTHZ-UHFFFAOYSA-N"}' # another inchi
#	@input = '{"subject": "20.1000/105"}'  # handle
#	@input = '{"subject": "http://w3id.org/Magnaporthe/polyA_Sites"}'  # url

else 
	@input = $stdin.read
end

cgi = CGI.new

schemas = {'subject' => ['string', "the GUID being tested"]}

@swagger = Swagger.new({
			:title => "FAIR Metrics Gen2- Unique Identifier",
			:description => "Metric to test if the metadata resource has a unique identifier.  This is done by comparing the GUID to the patterns (by regexp) of known GUID schemas such as URLs and DOIs.  Known schema are registered in FAIRSharing (https://fairsharing.org/standards/?q=&selected_facets=type_exact:identifier%20schema)",
			:tests_metric => 'https://purl.org/fair-metrics/Gen2_FM_F1A',
			:version => VERSION,
			:applies_to_principle => "F1",
			:organization => 'FAIR Metrics Authoring Group',
			:org_url => 'http://fairmetrics.org',
			:responsible_developer => "Mark D Wilkinson",
			:email => 'markw@illuminae.com',
			:developer_ORCiD => '0000-0001-6960-357X',
			:protocol => ENV['TEST_PROTOCOL'],
			:host => ENV['TEST_HOST'],
			:basePath => ENV['TEST_PATH'],
			:path => 'gen2_unique_identifier',
			:response_description => 'The response is a binary (1/0), success or failure',
			:schemas => schemas,
			:fairsharing_key_location => ENV['FAIRSHARING_KEY'],
			:debug => false			 				 
})


if (!cgi.request_method or cgi.request_method == "GET")  and !debug
	puts "Content-type: application/openapi+yaml;version=3.0\n\n"
	puts @swagger.getSwagger
	
elsif cgi.request_method == "POST"  or debug
	input_json = JSON.parse(@input)
	guid = input_json["subject"]
	@swagger.testedGUID = guid
	response = testGUID
	puts "Content-type: application/json+ld\n\n"
	puts response
end
