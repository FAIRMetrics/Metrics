@prefix this: <https://w3id.org/fair/maturity_indicator/np/Gen2/Gen2_MI_F2A/RAAKNiWm_tOvu3caJimdVYujMCwCOvit1gHfw1BP5o0Ec> .
@prefix sub: <https://w3id.org/fair/maturity_indicator/np/Gen2/Gen2_MI_F2A/RAAKNiWm_tOvu3caJimdVYujMCwCOvit1gHfw1BP5o0Ec#> .
@prefix fairmi: <https://w3id.org/fair/maturity_indicator/terms/Gen2/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dcelem: <http://purl.org/dc/elements/1.1/> .
@prefix np: <http://www.nanopub.org/nschema#> .
@prefix pav: <http://swan.mindinformatics.org/ontologies/1.2/pav/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix fair: <https://w3id.org/fair/principles/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix orcid: <https://orcid.org/> .

sub:Head {
  this: np:hasAssertion sub:assertion;
    np:hasProvenance sub:provenance;
    np:hasPublicationInfo sub:pubinfo;
    a np:Nanopublication .
}

sub:assertion {
  fairmi:Gen2_MI_F2A a fairmi:FAIR-Maturity-Indicator;
    rdfs:label "FAIR Maturity Indicator Gen2-MI-F2A";
    foaf:primaryTopic fair:F2;
    fairmi:comments "";
    fairmi:examples "";
    fairmi:measuring """Whether the metadata of the record contains \"structured\" elements.
These may be in the form of hash-like content (micrograph, JSON),
or in one of the various forms of linked data (JSON-LD, RDFa, etc.)""";
    fairmi:procedure """Metadata is harvested by:
1) resolving the GUID (following all redirects) with a Content-Type header specifically searching for some form of structured data.  e.g.
   'Accept: text/turtle, application/n3, application/rdf+n3, application/turtle, application/x-turtle,text/n3,text/turtle, text/rdf+n3, text/rdf+turtle,application/json+ld, text/xhtml+xml,application/rdf+xml,application/n-triples'
2) resolving any Link 'meta' HTTP Headers (processed independently according to this same process, but not iteratively)
3) parsing the response body either as a hash (for non-linked data) or as a Graph for linked data, or both.
4) All other data is passed to the 'extruct' tool (https://github.com/scrapinghub/extruct) or to the Apache Tika tool (https://tika.apache.org/) for deep exploration
5) Any linked or hash-type data found by those tools are merged with the existing Hash or Graph data
6) The Hash and Graph are interrogated v.v. if they contain any data""";
    fairmi:rationale """Structured data is inherently easier for machines to accurately process and
interpret.  Even loosely structured metadata can have reliable parsers built
to consume it, including those of major search engines.  Thus, it improves
the findability of the record.""";
    fairmi:relevance "All";
    fairmi:requirements "The Metadata GUID.";
    fairmi:validation "Hash or Graph contains data." .
}

sub:provenance {
  sub:_1 dcelem:format "text/markdown";
    a <http://rdfs.org/ns/void#Dataset>, dcat:Distribution;
    dcat:downloadURL fairmi:Gen2_MI_F2A.md .
  
  sub:assertion dcterms:author orcid:0000-0001-5306-5690, orcid:0000-0001-6960-357X,
      orcid:0000-0001-8888-635X, orcid:0000-0002-1164-1351, orcid:0000-0003-4727-9435;
    dcat:distribution sub:_1 .
}

sub:pubinfo {
  orcid:0000-0001-6960-357X foaf:name "Mark Wilkinson" .
  
  this: dcterms:created "2019-02-26"^^xsd:dateTime;
    dcterms:rights <https://creativecommons.org/publicdomain/zero/1.0>;
    dcterms:rightsHolder <http://fairmetrics.org>;
    pav:authoredBy orcid:0000-0001-6960-357X;
    pav:versionNumber "1" .
}
